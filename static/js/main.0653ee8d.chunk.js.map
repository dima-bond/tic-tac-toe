{"version":3,"sources":["helpers.js","components/Cell.js","components/Field.js","components/Welcome.js","Game.js","index.js"],"names":["winners","styles","Cell","onClick","value","className","Field","cells","showWin","map","e","i","style","Welcome","handleStart","handleInput","firstPlayer","secondPlayer","name","onChange","type","placeholder","Game","useState","player","setPlayer","Array","fill","cell","setCell","setShowWin","equal","setEqual","zerosScore","setZerosScore","crossesScore","setCrossesScore","showWelcome","setShowWelcome","playerOne","playerTwo","playerNameQuery","setPlayerNameQuery","useEffect","a","b","c","prev","includes","target","index","x","ReactDOM","render","document","getElementById"],"mappings":"yQAAaA,EAAU,CACrB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGIC,EAAS,CACpB,CAAC,IAAO,OACR,CACE,IAAO,MACP,UAAa,8BAEf,CAAC,OAAU,OACX,CACE,gBAAmB,WACnB,KAAQ,iBACR,UAAa,kCAEf,CACE,gBAAmB,aACnB,UAAa,sCAEf,CACE,gBAAmB,YACnB,MAAS,iBACT,UAAa,8CAEf,CACE,gBAAmB,WACnB,UAAa,sCAEf,CACE,gBAAmB,YACnB,UAAa,yC,eC9BFC,MANf,YAAiC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MACtB,OACE,qBAAKC,UAAS,eAAUD,GAASD,QAASA,K,MCY/BG,MAbf,YAA6C,IAA5BH,EAA2B,EAA3BA,QAASI,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC/B,OACE,sBAAKH,UAAU,QAAf,UACGE,EAAME,KAAI,SAACC,EAAGC,GAAJ,OACT,cAAC,EAAD,CAAcP,MAAOG,EAAMI,GAAIR,QAAS,kBAAMA,EAAQQ,KAA3CA,MAEZH,GACC,qBAAKH,UAAU,SAASO,MAAOJ,Q,MCiBxBK,MAzBf,YAA2E,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACxD,OACE,qBAAKZ,UAAU,qBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,yDACA,uBACEa,KAAK,YACLd,MAAOY,EACPG,SAAUJ,EACVK,KAAK,OACLC,YAAY,iBAEd,uBACEH,KAAK,YACLd,MAAOa,EACPE,SAAUJ,EACVK,KAAK,OACLC,YAAY,gBAEd,wBAAQD,KAAK,SAASjB,QAASW,EAA/B,mC,MCmFOQ,MAlGf,WAAiB,IAAD,EACcC,mBAAS,QADvB,mBACPC,EADO,KACCC,EADD,OAEUF,mBAASG,MAAM,GAAGC,KAAK,OAFjC,mBAEPC,EAFO,KAEDC,EAFC,OAGgBN,oBAAS,GAHzB,mBAGPf,EAHO,KAGEsB,EAHF,OAIYP,oBAAS,GAJrB,mBAIPQ,EAJO,KAIAC,EAJA,OAKsBT,mBAAS,GAL/B,mBAKPU,EALO,KAKKC,EALL,OAM0BX,mBAAS,GANnC,mBAMPY,EANO,KAMOC,EANP,OAOwBb,oBAAS,GAPjC,mBAOPc,EAPO,KAOMC,EAPN,OAQgCf,mBAAS,CACrDgB,UAAW,GACXC,UAAW,KAVC,mBAQPC,EARO,KAQUC,EARV,KAoEd,OAvDAC,qBAAU,WACR,IAAK,IAAIhC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAAC,IAAD,cACRX,EAAQW,GADA,GACnBiC,EADmB,KAChBC,EADgB,KACbC,EADa,KAE1B,GAAIlB,EAAKgB,IAAMhB,EAAKgB,KAAOhB,EAAKiB,IAAMjB,EAAKgB,KAAOhB,EAAKkB,GAErD,OADAhB,EAAW7B,EAAOU,IACH,SAAXa,EACKU,GAAc,SAAAa,GAAI,OAAIA,EAAO,KAE/BX,GAAgB,SAAAW,GAAI,OAAIA,EAAO,KAI1C,IAAInB,EAAKoB,SAAS,MAChB,OAAOhB,GAAS,GAGlBP,GAAU,SAAAsB,GAAI,MAAa,SAATA,EAAkB,QAAU,YAC7C,CAACnB,IAuCF,sBAAKvB,UAAU,YAAf,UACGgC,GACC,cAAC,EAAD,CACEvB,YAtBY,WACd2B,EAAgBF,YAAcE,EAAgBD,WAChDE,EAAmB,CACjBH,UAAW,WACXC,UAAW,aAGfF,GAAe,IAgBTvB,YAbY,SAACL,GACnB,IAAMN,EAAQM,EAAEuC,OAAO7C,MACvBsC,EAAmB,2BACdD,GADa,kBAEf/B,EAAEuC,OAAO/B,KAAOd,MAUbY,YAAayB,EAAgBF,UAC7BtB,aAAcwB,EAAgBD,YAGlC,cAAC,EAAD,CAAOrC,QA9CS,SAAC+C,GACftB,EAAKsB,IAAU1C,GAGnBqB,GAAQ,SAAAkB,GACN,IAAII,EAAC,YAAOJ,GAEZ,OADAI,EAAED,GAAS1B,EACJ2B,MAuCsB5C,MAAOqB,EAAMpB,QAASA,IACnD,sBAAKH,UAAU,QAAf,UACE,sCACA,sCAAOoC,EAAgBF,UAAvB,qBAA6CJ,KAC7C,sCAAOM,EAAgBD,UAAvB,oBAA4CP,MAC1CzB,GAAWuB,IACX,sBAAK1B,UAAU,UAAf,UACGG,EACD,8BAAe,SAAXgB,EAAoBiB,EAAgBD,UAAYC,EAAgBF,UAApE,YACE,0CACF,wBAAQnB,KAAK,SAASjB,QA7CZ,WAClBsB,EAAU,QACVI,EAAQH,MAAM,GAAGC,KAAK,OACtBG,EAAW,MACXE,GAAS,IAyCD,mCCzFZoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0653ee8d.chunk.js","sourcesContent":["export const winners = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport const styles = [\n  {'top': '15%'},\n  {\n    'top': '50%',\n    'transform': 'rotate(0) translateY(-50%)'\n  },\n  {'bottom': '15%'},\n  {\n    'transformOrigin': 'top left',\n    'left': 'calc(100% / 6)',\n    'transform': 'rotate(90deg) translateY(-50%)',\n  },\n  {\n    'transformOrigin': 'top center',\n    'transform': 'rotate(90deg) translate(50%, -50%)',\n  },\n  {\n    'transformOrigin': 'top right',\n    'right': 'calc(100% / 6)',\n    'transform': 'rotate(-90deg) translateY(calc(100% / -3))',\n  },\n  {\n    'transformOrigin': 'top left',\n    'transform': 'rotate(45deg) translate(21%, -50%)',\n  },\n  {\n    'transformOrigin': 'top right',\n    'transform': 'rotate(-45deg) translate(-21%, -50%)',\n  }\n]\n","import './Cell.css';\n\nfunction Cell({onClick, value}) {\n  return (\n    <div className={`cell ${value}`} onClick={onClick}></div>\n  )\n}\n\nexport default Cell;\n","import Cell from './Cell';\nimport './Field.css';\n\nfunction Field({ onClick, cells, showWin }) {\n  return (\n    <div className=\"field\">\n      {cells.map((e, i) => (\n        <Cell key={i} value={cells[i]} onClick={() => onClick(i)}/>\n      ))}\n      {showWin && (\n        <div className=\"winner\" style={showWin}></div>\n      )}\n    </div>\n  )\n}\n\nexport default Field;\n","import './Welcome.css'\n\nfunction Welcome({ handleStart, handleInput, firstPlayer, secondPlayer }) {\n  return (\n    <div className=\"welcome__container\">\n      <div className=\"welcome\">\n        <p>Please, enter your name:</p>\n        <input\n          name=\"playerOne\"\n          value={firstPlayer}\n          onChange={handleInput}\n          type=\"text\" \n          placeholder=\"Player Cross\"\n        ></input>\n        <input\n          name=\"playerTwo\"\n          value={secondPlayer}\n          onChange={handleInput}\n          type=\"text\" \n          placeholder=\"Player Zero\"\n        ></input>\n        <button type=\"button\" onClick={handleStart}>Start the game!</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome;\n","import { useEffect, useState } from 'react';\nimport { winners, styles } from './helpers';\nimport Field from './components/Field';\nimport Welcome from './components/Welcome';\nimport './Game.css';\n\nfunction Game() {\n  const [player, setPlayer] = useState('zero');\n  const [cell, setCell] = useState(Array(9).fill(null));\n  const [showWin, setShowWin] = useState(false);\n  const [equal, setEqual] = useState(false);\n  const [zerosScore, setZerosScore] = useState(0);\n  const [crossesScore, setCrossesScore] = useState(0);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [playerNameQuery, setPlayerNameQuery] = useState({\n    playerOne: '',\n    playerTwo: ''\n  });\n\n  useEffect(() => {\n    for (let i = 0; i < 8; i++) {\n      const [a, b, c] = winners[i];\n      if (cell[a] && cell[a] === cell[b] && cell[a] === cell[c]) {\n        setShowWin(styles[i]);\n        if (player === 'zero') {\n          return setZerosScore(prev => prev + 1);\n        }\n        return setCrossesScore(prev => prev + 1);\n      }\n    }\n\n    if(!cell.includes(null)) {\n      return setEqual(true);\n    }\n\n    setPlayer(prev => prev === 'zero' ? 'cross' : 'zero');\n  }, [cell])\n\n  const handleClick = (index) => {\n    if (cell[index] || showWin) {\n      return;\n    }\n    setCell(prev => {\n      let x = [...prev];\n      x[index] = player;\n      return x;\n    })\n  }\n\n  const handleReset = () => {\n    setPlayer('zero');\n    setCell(Array(9).fill(null));\n    setShowWin(null);\n    setEqual(false);\n  }\n\n  const handleStart = () => {\n    if (playerNameQuery.playerOne === playerNameQuery.playerTwo) {\n      setPlayerNameQuery({\n        playerOne: 'Player 1',\n        playerTwo: 'Player 2'\n      });\n    }\n    setShowWelcome(false);\n  }\n\n  const handleInput = (e) => {\n    const value = e.target.value;\n    setPlayerNameQuery({\n      ...playerNameQuery,\n      [e.target.name]: value\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      {showWelcome && (\n        <Welcome \n          handleStart={handleStart}\n          handleInput={handleInput}\n          firstPlayer={playerNameQuery.playerOne}\n          secondPlayer={playerNameQuery.playerTwo}\n        />\n      )}\n      <Field onClick={handleClick} cells={cell} showWin={showWin}/>\n      <div className=\"score\">\n        <p>Score</p>\n        <p>{`${playerNameQuery.playerOne} (cross): ${crossesScore}`}</p>\n        <p>{`${playerNameQuery.playerTwo} (zero): ${zerosScore}`}</p>\n        {(showWin || equal) && (\n          <div className=\"results\">\n            {showWin ?\n            <p>{player === 'zero' ? playerNameQuery.playerTwo : playerNameQuery.playerOne} wins!</p>\n            : <p>No sides!</p>}\n            <button type=\"button\" onClick={handleReset}>\n              Start over!\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}